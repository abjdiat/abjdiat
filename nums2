<!DOCTYPE html>
<html  lang="ar" >
<link rel="stylesheet" media="screen" href="1" type="text/css"/>
<style>
body{text-align:center;   font-family: 'DroidArabicNaskhRegular';font-weight:bolder;
   font-weight: normal;
   font-style: normal;background-color: #c2c6b3;
padding:20px;margin:30px}
ul{float:left;width:100%;}

li{font-size:35pt;width:150px;height:150px;display:inline-block;padding:10px;margin:10px;background:#dad295;text-align:center;border:5px solid #717845;}
img{float:right;width:200px;height:180px;border:10px solid #484111;margin:10px;padding:10px}

</style>

<script charset="utf-8">
    var words_to_display=1;
   
  var nums_written=["One","Two","Three","Four","Five","Six","Seven","Eight","Nine","Ten","Eleven","Twelve","Thirteen",
                  "Fourteen","Fifteen","Sixteen","Seventeen","Eighteen","Nineteen","Twenty" ];

var nums_n=["1","2","3","4","5","6","7","8","9","10","11","12","13",
                  "14","15","16","17","18","19","20"];
var delay = ( function() {
    var timer = 0;
    return function(callback, ms) {
        clearTimeout (timer);
        timer = setTimeout(callback, ms);
    };
})();

var nums=Array(nums_written.length);
for (var f=0;f<nums.length;f++){
nums[f]=f;

}

var countee = 0;
function counttrue(){
    
countee=countee+1;
if (countee == words_to_display){
  delay(function(){
  window.location.reload(true)
}, 1000 )
    }
  }
function dragstart_handler(ev) {
 console.log("dragStart");
 // Change the source element's background color to signify drag has started
 // Set the drag's format and data. Use the event target's id for the data
 
 ev.dataTransfer.setData("text/plain", ev.target.id);
 }

function dragover_handler(ev) {
 console.log("dragOver");
 ev.preventDefault();
}

function drop_handler(ev) {
 console.log("Drop");
 ev.preventDefault();
 // Get the data, which is the id of the drop target
 var data = ev.dataTransfer.getData("text");
 if (ev.target.id == data+"target") {
document.getElementById(data).style.display = 'none';
ev.currentTarget.style.border = "10px solid green";
var x = document.getElementById("myAudio"); 
x.play();

counttrue();
 // Clear the drag data cache (for all formats/types)
 ev.dataTransfer.clearData();

}
else {
ev.currentTarget.style.border = "solid red";}
var x2 = document.getElementById("myAudio2"); 
x2.play();

}
function shuffleArray(array) {
  let curId = array.length;
  // There remain elements to shuffle
  while (0 !== curId) {
    // Pick a remaining element
    let randId = Math.floor(Math.random() * curId);
    curId -= 1;
    // Swap it with the current element.
    let tmp = array[curId];
    array[curId] = array[randId];
    array[randId] = tmp;
  }
  return array;
}
shuffleArray(nums);
function newElement() {
let i =0;
while(i<words_to_display){

  var li = document.createElement("li"); 

  var inputValue = nums_written[nums[i]];
  //if(inputValue.length == 4 ){
  li.id=nums_n[nums[i]];

  li.setAttribute("draggable","true");
  li.setAttribute("ondragstart"," dragstart_handler(event)");
  var t = document.createTextNode(inputValue);
  li.appendChild(t);

    document.getElementById("animals").appendChild(li);
i++;}
  }
//}
function newimg() {
let i =0;
while(i<4){

  var li = document.createElement("li");


  var inputValue = nums_n[nums[i]]
  li.id=nums_n[nums[i]]+"target";
    li.setAttribute("src",inputValue);
  li.setAttribute("ondrop","drop_handler(event)");
  li.setAttribute("ondragover","dragover_handler(event)");
  var t = document.createTextNode(inputValue);
  li.appendChild(t);

    document.getElementById("images").appendChild(li);
    delete nums_n[nums[i]];

i++;
  }
}
</script>

<body>
<audio id="myAudio">
  
  <source src="bravo.m4a" type="audio/mpeg">
  Your browser does not support the audio element.
</audio>
<audio id="myAudio2">
  <source src="error.m4a" type="audio/mpeg">
  Your browser does not support the audio element.
</audio>
<div>
<ul id=animals>
  <script>
    newElement();
  </script>
  
</ul><div id='images'>
  <script>newimg()</script>


</div>
</div> 
</div>
</body>
</html> 
